

-- [BArrayInArray]


-- To enable this test, copy this file to "ASASampleQueries.asaql"

-- Use the following commands to comment/uncomment queries
-- Ctrl+K+C/Ctrl+K+U





-- 1. Get Overview

-- SELECT *
-- FROM [BArrayInArray]



-- 2. Pick Data.OperationTimeStamp value from Json document and convert it to datetime

-- SELECT TRY_CAST(IotDataInput.Data.OperationTimeStamp AS DATETIME)                 AS [Ts]
--        ,*
-- FROM [BArrayInArray] AS IotDataInput



-- 3. Get record properties from Data element

-- SELECT 
--    TRY_CAST(IotDataInput.Data.OperationTimeStamp AS DATETIME)                 AS [Ts]
--   ,Data.PropertyName
--   ,Data.PropertyValue
-- FROM [BArrayInArray] AS IotDataInput
--      CROSS APPLY GetRecordProperties(IotDataInput.Data) AS Data



-- 4. Remove un-wanted elements, -> Just fetch the data properties
     
-- SELECT 
--    TRY_CAST(IotDataInput.Data.OperationTimeStamp AS DATETIME)                 AS [Ts]
--   ,Data.PropertyName
--   ,Data.PropertyValue
-- FROM [BArrayInArray] AS IotDataInput
--      CROSS APPLY GetRecordProperties(IotDataInput.Data) AS Data
-- WHERE Data.PropertyName <> 'OperationCurveData' 
--   AND Data.PropertyName <> 'OperationTimeStamp' 


-- 5. Reads the OperationsCurveData array within the Data Record and prvides the Values array
--    as OperationCurveDataElementsValues attribute + the SensorId

-- WITH IotDataInput_Data
-- AS
-- (
-- 	SELECT 
--       TRY_CAST(IotDataInput.Data.OperationTimeStamp AS DATETIME)    AS [Ts]
--      ,IotDataInput_Data.PropertyName
--      ,IotDataInput_Data.PropertyValue                               AS OperationCurveData
--     FROM [BArrayInArray] AS IotDataInput
--        CROSS APPLY GetRecordProperties(IotDataInput.Data)           AS IotDataInput_Data
--     WHERE IotDataInput_Data.PropertyName = 'OperationCurveData' 	 

-- )
-- , OperationCurveDataElements
-- AS
-- (
-- 	SELECT 
-- 	    IotDataInput_Data.[Ts]
-- 	   ,OperationCurveDataElements.ArrayValue.[Values]                   AS OperationCurveDataElementsValues
-- 	   ,OperationCurveDataElements.ArrayValue.SensorId
--     FROM IotDataInput_Data
-- 	  CROSS APPLY GetArrayElements(IotDataInput_Data.OperationCurveData) AS OperationCurveDataElements
-- )
-- SELECT *
-- FROM OperationCurveDataElements


-- 6. Reads the values of the OperationCurveDataElementsValues and calculates the real timestamp, side by side witht the TimeOffsetInMs

WITH IotDataInput_Data
AS
(
	SELECT 
      TRY_CAST(IotDataInput.Data.OperationTimeStamp AS DATETIME)    AS [Ts]
     ,IotDataInput_Data.PropertyName
     ,IotDataInput_Data.PropertyValue                               AS OperationCurveData
    FROM [BArrayInArray] AS IotDataInput
       CROSS APPLY GetRecordProperties(IotDataInput.Data)           AS IotDataInput_Data
    WHERE IotDataInput_Data.PropertyName = 'OperationCurveData' 	 

)
, OperationCurveDataElements
AS
(
	SELECT 
	    IotDataInput_Data.[Ts]
	   ,OperationCurveDataElements.ArrayValue.[Values]                   AS OperationCurveDataElementsValues
	   ,OperationCurveDataElements.ArrayValue.SensorId
    FROM IotDataInput_Data
	  CROSS APPLY GetArrayElements(IotDataInput_Data.OperationCurveData) AS OperationCurveDataElements
)
SELECT 
   OperationCurveDataElements.[Ts]
  ,DATEADD(millisecond, CurveValues.ArrayValue.TimeOffsetInMs, OperationCurveDataElements.[Ts]) AS RealTs
  ,OperationCurveDataElements.[SensorId]
  ,CurveValues.ArrayValue.Value
  ,CurveValues.ArrayValue.TimeOffsetInMs
FROM OperationCurveDataElements
  CROSS APPLY  GetArrayElements(OperationCurveDataElements.OperationCurveDataElementsValues) AS CurveValues

